(function(s,i,u,E,c,T){"use strict";function k(){const e=window[window.__vendetta_loader?.features?.themes?.prop];if(e)return e?.data?.plus}const f=c.findByStoreName("UnsyncedUserSettingsStore");function l(e){const t=f.useAMOLEDTheme;if(t===3)return e.darker??e.dark;if(t===2)return e.amoled??e.dark;if(t===1)return e.light;if(t===0)return e.dark}function y(){const e=f.useAMOLEDTheme;i.FluxDispatcher.dispatch({type:"UNSYNCED_USER_SETTINGS_UPDATE",settings:{useAMOLEDTheme:[0,1,2].find(function(t){return t!==e})}}),i.FluxDispatcher.dispatch({type:"UNSYNCED_USER_SETTINGS_UPDATE",settings:{useAMOLEDTheme:e}})}function D(e,t){const o=E.getAssetByID(t)?.name;if(!o||!e.icons[o])return;const n=e.icons[o];return Array.isArray(n)?l({dark:n[0],light:n[1],amoled:n[2],darker:n[3]}):n}function p(e){if(!e.unreadBadgeColor)return;const t=e.unreadBadgeColor;return Array.isArray(t)?l({dark:t[0],light:t[0],amoled:t[0],darker:t[0]}):t}const g=c.findByProps("MaskedBadge"),d=function(e,t){e.style??=[],Array.isArray(e.style)||(e.style=[e.style]),e.style=e.style.concat(t)};function v(){const e=new Array,t=k();let o=!1;return t?.version!==void 0&&(t.icons&&(o=!0,e.push(u.before("render",i.ReactNative.Image,function(n){let[r]=n;if(!r.source||typeof r.source!="number")return;const a=D(t,r.source);a&&d(r,{tintColor:a})}))),t.unreadBadgeColor&&(o=!0,e.push(u.after("MaskedBadge",g,function(n,r){const a=r&&T.findInReactTree(r,function(m){return m?.type?.name==="Badge"});a&&e.push(u.after("type",a,function(m,A){return A?.props&&d(A.props,{backgroundColor:p(t)})},!0))})),e.push(u.after("default",g,function(n,r){return r?.props&&d(r.props,{backgroundColor:p(t)})})))),o&&y(),function(){y(),e.forEach(function(n){return n()})}}let h;var S={onLoad:function(){return h=v()},onUnload:function(){return h?.()}};return s.default=S,Object.defineProperty(s,"__esModule",{value:!0}),s})({},vendetta.metro.common,vendetta.patcher,vendetta.ui.assets,vendetta.metro,vendetta.utils);
